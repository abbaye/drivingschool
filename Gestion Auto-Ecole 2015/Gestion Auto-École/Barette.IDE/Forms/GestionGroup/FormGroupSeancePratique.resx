<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        I6FvLXbW8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>