<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4R/q8Tar/sX0nAAAAABJRU5ErkJggg==
</value>
  </data>
</root>